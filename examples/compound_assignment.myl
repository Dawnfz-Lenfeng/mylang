// Test compound assignment operators
let x = 10;

// Test +=
x += 5;
assert(x == 15, "x += 5 should make x = 15");

// Test -=
x -= 3;
assert(x == 12, "x -= 3 should make x = 12");

// Test *=
x *= 2;
assert(x == 24, "x *= 2 should make x = 24");

// Test /=
x /= 4;
assert(x == 6, "x /= 4 should make x = 6");

// Test with expressions
let y = 100;
y += x * 2;
assert(y == 112, "y += x * 2 should make y = 112 (100 + 6*2)");

// Test chaining (right associative)
let a = 5;
let b = 3;
a += b += 2;  // Should be: a += (b += 2), so b becomes 5, then a becomes 10
assert(b == 5, "b += 2 should make b = 5");
assert(a == 10, "a += b should make a = 10");

// Test increment pattern
let count = 0;
count += 1;
count += 1;
count += 1;
assert(count == 3, "Three increments should make count = 3");

print "All compound assignment tests passed!";