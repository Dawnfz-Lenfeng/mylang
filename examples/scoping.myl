// Test variable scoping
let global_var = "global";

fn outer_function() {
    let outer_var = "outer";
    assert(outer_var == "outer", "Local variable should be accessible");
    assert(global_var == "global", "Global variable should be accessible from function");
    
    fn inner_function() {
        let inner_var = "inner";
        assert(inner_var == "inner", "Inner local variable should be accessible");
        assert(outer_var == "outer", "Outer variable should be accessible from inner function");
        assert(global_var == "global", "Global variable should be accessible from inner function");
        return inner_var + "_" + outer_var + "_" + global_var;
    }
    
    let result = inner_function();
    assert(result == "inner_outer_global", "Nested function should access all scopes");
    return outer_var + "_accessed";
}

let outer_result = outer_function();
assert(outer_result == "outer_accessed", "Outer function should return correct value");
assert(global_var == "global", "Global variable should remain unchanged");

print "All scoping tests passed!";